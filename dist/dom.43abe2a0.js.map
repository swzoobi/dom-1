{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","child","appendChild","wrap","remove","removeChild","empty","x","array","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","method","html","style","Object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.43abe2a0.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n  // 增\r\n\r\n  create(string) {\r\n    const container = document.createElement(\"template\"); // template标签可以容纳任意标签而不出错\r\n    container.innerHTML = string.trim(); // 去掉输入文本的空格\r\n    return container.content.firstChild; // 返回template中的内容\r\n  },\r\n  after(node, node2) {\r\n    node.parentNode.insertBefore(node2, node.nextSibling);\r\n  },\r\n  before(node, node2) {\r\n    node.parentNode.insertBefore(node2, node);\r\n  },\r\n  append(parent, child) {\r\n    parent.appendChild(child);\r\n  },\r\n  wrap(node, parent) {\r\n    // 给node找个父亲\r\n    dom.before(node, parent);\r\n    dom.append(parent, node);\r\n  },\r\n\r\n  // 删\r\n\r\n  remove(node) {\r\n    node.parentNode.removeChild(node);\r\n    return node;\r\n  },\r\n  empty(node) {\r\n    const array = [];\r\n    let x = node.firstChild;\r\n    while (x) {\r\n      array.push(dom.remove(node.firstChild));\r\n      x = node.firstChild;\r\n    }\r\n    return array;\r\n  },\r\n\r\n  // 改\r\n  attr(node, name, value) {\r\n    if (arguments.length === 3) {\r\n      node.setAttribute(name, value);\r\n    } else if (arguments.length === 2) {\r\n      return node.getAttribute(name);\r\n    }\r\n  },\r\n  text(node, text) {\r\n    let method = \"textContent\";\r\n    if (\"innerText\" in node) {\r\n      method = \"innerText\";\r\n    }\r\n\r\n    if (arguments.length === 2) {\r\n      node[method] = text;\r\n    } else if (arguments.length === 1) {\r\n      return node[method];\r\n    }\r\n  },\r\n  html(node, html) {\r\n    if (arguments.length === 2) {\r\n      node.innerHTML = html;\r\n    } else if (arguments.length === 1) {\r\n      return node.innerHTML;\r\n    }\r\n  },\r\n  style(node, style, value) {\r\n    if (arguments.length === 3) {\r\n      node.style[style] = value;\r\n    } else if (arguments.length === 2) {\r\n      if (typeof style === \"string\") {\r\n        return node.style[style];\r\n      } else if (style instanceof Object) {\r\n        for (key in style) {\r\n          node.style[key] = style[key];\r\n        }\r\n      }\r\n    }\r\n  },\r\n  class: {\r\n    add(node, className) {\r\n      node.classList.add(className);\r\n    },\r\n    remove(node, className) {\r\n      node.classList.remove(className);\r\n    },\r\n    has(node, className) {\r\n      return node.classList.contains(className);\r\n    },\r\n  },\r\n  on(node, eventName, fn) {\r\n    node.addEventListener(eventName, fn);\r\n  },\r\n  off(node, eventName, fn) {\r\n    node.removeEventListener(eventName, fn);\r\n  },\r\n\r\n  // 查\r\n  find(selector, scope) {\r\n    return (scope || document).querySelectorAll(selector);\r\n  },\r\n  parent(node) {\r\n    return node.parentNode;\r\n  },\r\n  children(node) {\r\n    return node.children;\r\n  },\r\n  siblings(node) {\r\n    return Array.from(node.parentNode.children).filter((n) => n !== node);\r\n  },\r\n  next(node) {\r\n    let x = node.nextSibling;\r\n    while (x && x.nodeType === 3) {\r\n      x = x.nextSibling;\r\n    }\r\n    return x;\r\n  },\r\n  previous(node) {\r\n    let x = node.previousSibling;\r\n    while (x && x.nodeType === 3) {\r\n      x = x.previousSibling;\r\n    }\r\n    return x;\r\n  },\r\n  each(nodeList, fn) {\r\n    for (let i = 0; i < nodeList.length; i++) {\r\n      fn.call(null, nodeList[i]);\r\n    }\r\n  },\r\n  index(node) {\r\n    const list = dom.children(node.parentNode);\r\n    let i;\r\n    for (i = 0; i < list.length; i++) {\r\n      if (list[i] === node) {\r\n        break;\r\n      }\r\n    }\r\n    return i;\r\n  },\r\n};\r\n"]}